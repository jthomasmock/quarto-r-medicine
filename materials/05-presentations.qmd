---
format: 
  revealjs:
    slide-number: c/t
    width: 1600
    height: 900
    logo: "https://www.rstudio.com/wp-content/uploads/2018/10/RStudio-Logo-Flat.png"
    footer: "[jthomasmock.github.io/quarto-r-medicine/](https://jthomasmock.github.io/quarto-r-medicine/)"
    css: ["theme/theme.css"]
    theme: simple
    echo: true
editor: source
---

# 05 - Presentations {background-image="images/presenter.png" background-size="cover" background-color="#4f6952"}

<h2>Making Slides with Code</h2>

<h3>Tom Mock \| 2022-07-25</h3>

## Quarto presentation formats

-   `revealjs` - essentially the replacement for `xaringan`, but with Pandoc-native syntax
-   `beamer` for LaTex slides
-   Powerpoint for when you *have* to collaborate via Office

```{r}
#| echo: false
library(countdown)
countdown_timer <- function(
    minutes = 1, 
    play_sound = TRUE, 
    font_size = "2em", 
    ...
) {
  countdown(
    minutes = minutes,
    # Fanfare when it's over
    play_sound = play_sound,
    # Set timer theme to match solarized colors
    color_border              = "#404041",
    color_text                = "white",
    color_background = "#447099",
    color_running_background  = "#72994E",
    color_running_text        = "white",
    color_finished_background = "#EE6331",
    color_finished_text       = "white",
    font_size = font_size,
    ...
  )
}
```

## `revealjs`

> reveal.js is an open source HTML presentation framework. It's a tool that enables anyone with a web browser to create fully-featured and beautiful presentations for free.

. . .

-   `revealjs` for Quarto is a framework for turning Pandoc-friendly markdown + code into beautiful slides

-   User guide: <https://quarto.org/docs/presentations/revealjs/>

##  {background-image="images/quarto-slides.png" background-position="center" background-size="auto 50%"}

. . .

![](https://c.tenor.com/3EYd9ID79vcAAAAd/mic-drop-the-voice.gif){fig-align="center"}

## Core workflow

    ---
    format: revealjs
    ---

    ## Step 1
    - Split slides up with level 2 headers: `## Heading 2`
    - Add some markdown + text and/or some R/Python code

    ## Step 2
    - quarto render

    ## Step 3
    - Profit
    
# `r fontawesome::fa("laptop-code", "white")` Your Turn {background-color="#447099" transition="slide-in"}

-   Open `quarto-workshop/05-presentations/revealjs-penguins.qmd`
-   Explore the code
-   Add a new slide with a level 2 header and some text
-   Render it!

## YAML for these slides

    ---
    format: 
      revealjs:
        slide-number: c/t
        width: 1600
        height: 900
        logo: "https://www.rstudio.com/wp-content/uploads/2018/10/RStudio-Logo-Flat.png"
        footer: "[Get started with Quarto](https://rstudio-conf-2022.github.io/get-started-quarto/)"
        css: ["theme/theme.css"]
        theme: simple
        echo: true
    ---

## Transitions

+-------------+------------------------------------------------------------------------+
| Transition  | Description                                                            |
+=============+========================================================================+
| `none`      | No transition (switch instantly)                                       |
+-------------+------------------------------------------------------------------------+
| `fade`      | Cross fade                                                             |
+-------------+------------------------------------------------------------------------+
| `slide`     | Slide horizontally                                                     |
+-------------+------------------------------------------------------------------------+
| `convex`    | Slide at a convex angle                                                |
+-------------+------------------------------------------------------------------------+
| `concave`   | Slide at a concave angle                                               |
+-------------+------------------------------------------------------------------------+
| `zoom`      | Scale the incoming slide so it grows in from the center of the screen. |
+-------------+------------------------------------------------------------------------+

. . .

``` yaml
---
title: "Presentation"
format:
  revealjs:
    transition: slide
    transition-speed: fast
---
```

## Sizing

+----------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| `width`  | The "normal" width of the presentation, aspect ratio will be preserved when the presentation is scaled to fit different resolutions. Can be specified using percentage units.  |
+:=========+:===============================================================================================================================================================================+
| `height` | The "normal" height of the presentation, aspect ratio will be preserved when the presentation is scaled to fit different resolutions. Can be specified using percentage units. |
+----------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

``` yaml
format:
  revealjs:
    height: 900
    width: 1600
```

## Slide numbering

+----------------+-------------------------------------------------------------------------+
| `slide-number` | Display the page number of the current slide                            |
|                |                                                                         |
|                | -   `true`: Show slide number                                           |
|                |                                                                         |
|                | -   `false`: Hide slide number                                          |
|                |                                                                         |
|                | Can optionally be set as a string that specifies the number formatting: |
|                |                                                                         |
|                | -   `h.v`: Horizontal . vertical slide number                           |
|                |                                                                         |
|                | -   `h/v`: Horizontal / vertical slide number                           |
|                |                                                                         |
|                | -   `c`: Flattened slide number                                         |
|                |                                                                         |
|                | -   `c/t`: Flattened slide number / total slides (default)              |
+----------------+-------------------------------------------------------------------------+

. . .

``` yaml
---
format:
  revealjs:
    slide-number: c/t #< collapsed/total
---
```

## Presentation preview

-   In the latest version of RStudio, Quarto `revealjs` presentations will open up as a "background job" in the Presentation tab.

. . .

![](images/presentation-tab.png){height="800px"}

# `r fontawesome::fa("laptop-code", "white")` Your Turn {background-color="#447099" transition="slide-in"}

-   Using RStudio, create a new `revealjs` Quarto presentation
-   Change YAML:
    -   author for your name
    -   titled "My first Quarto Presentation!"
    -   Add slide numbering (what do the different types mean?)
-   Write out what you did this morning (woke up, ate breakfast, walked to this room, etc) in sub-sections
-   New sections should have level 2 headers
-   Add a code chunk
-   Link out to an image with markdown syntax
-   Render it!

## `revealjs` vs `xaringan`

-   `xaringan` for RMarkdown uses only `knitr` and `remark.js`, without Pandoc and with some Pandoc-incompatabilities
-   `revealjs` was a lesser known RMarkdown package, but is the primary HTML slide generator for Quarto

. . .

If you loved `xaringan`, you'll love `revealjs`!

## Presentation Visual Editor

Unlike `xaringan`, Quarto + `revealjs` can be edited with the RStudio Visual Editor!

![](images/reveal-visual-editor.jpeg)

## Separate slides

-   Level 2 header = new slide

-   Level 1 header = new slide and new section

. . .

-   `---` can also delineate slides via horizontal rules or leave the heading "blank" for untitled slides

## Reminder about pandoc div and spans

    ::: {.class}
    <SOME CONTENT>
    :::

. . .

    Some text with a specific [span]{.span-class}

## Lists

-   Create lists with `-` or `*` or `1.`

. . .

Incrementally reveal elements with:

    ::: {.incremental}

    - First item
    - Second item

    :::

. . .

Or affect globally:

``` yaml
format:
  revealjs:
    incremental: true
```

. . .

Or turn it off for specific lists

    ::: {.nonincremental}

    - 1st Item
    - 2nd Item

    :::
    
## Incremental lists

::: {.incremental}

- First item
- Second item
- Last item

:::

## Incremental reveal

Not limited to just bullet points...

Use `. . .` syntax to indicate a break at an arbitrary location

. . .

```{r}
head(mtcars)
```

## Incremental reveal

    Not limited to just bullet points...

    Use `. . .` syntax to indicate a break at an arbitrary location

    . . .

    ```{{r}}
    head(mtcars)
    ```

## Fragments

You can also make a point with fragments

. . .

::: fragment
Fade in
:::

::: {.fragment .fade-out}
Fade out
:::

::: {.fragment .highlight-red}
Highlight red
:::

::: {.fragment .fade-in-then-out}
Fade in, then out
:::

::: {.fragment .fade-up}
Slide up while fading in
:::

## Fragments

    ::: {.fragment}
    Fade in
    :::

    ::: {.fragment .fade-out}
    Fade out
    :::

    ::: {.fragment .highlight-red}
    Highlight red
    :::

    ::: {.fragment .fade-in-then-out}
    Fade in, then out
    :::

    ::: {.fragment .fade-up}
    Slide up while fading in
    :::

## Fragments, nesting

Fragments can be nested to affect the same "text" multiple times

::: {.fragment .fade-in}
::: {.fragment .highlight-red}
::: {.fragment .semi-fade-out}
Fade in \> Turn red \> Semi fade out
:::
:::
:::

## Fragments, nesting

    ::: {.fragment .fade-in}
    ::: {.fragment .highlight-red}
    ::: {.fragment .semi-fade-out}
    Fade in > Turn red > Semi fade out
    :::
    :::
    :::

## Fragments, spans

This is an [important sentence!]{.fragment .highlight-red}

. . .

    This is an [important sentence!]{.fragment .highlight-red}

. . .

<br>

Mind the [gap]{.fragment .fade-in} when riding the rail!

. . .

    Mind the [gap]{.fragment .fade-in} when riding the rail!

## Fragments, order

::: {.fragment fragment-index="3"}
Appears last
:::

::: {.fragment fragment-index="1"}
Appears first
:::

::: {.fragment fragment-index="2"}
Appears second
:::

## Fragments, order

    ::: {.fragment fragment-index=3}
    Appears last
    :::

    ::: {.fragment fragment-index=1}
    Appears first
    :::

    ::: {.fragment fragment-index=2}
    Appears second
    :::

    
# `r fontawesome::fa("laptop-code", "white")` Your Turn {background-color="#447099" transition="slide-in"}

- Open `quarto-workshop/05-presentation/fragments.qmd`
- Make the portions appear in order: top -> bottom and left -> right

## Column layout

    :::: {.columns}

    ::: {.column width="40%"}
    contents...
    :::

    ::: {.column width="60%"}
    contents...
    :::

    ::::

## Column layout

::: columns
::: {.column width="40%"}
On the left
:::

::: {.column width="60%"}
On the right
:::
:::

## Column layout

::: columns
::: {.column width="40%"}
```{r}
#| echo: fenced
#| eval: false
dplyr::glimpse(mtcars)
```
:::

::: {.column width="60%"}
```{r}
#| echo: false
#| eval: true
dplyr::glimpse(mtcars)
```
:::
:::

## Output location, `column-fragment`

```{r}
#| echo: fenced
#| output-location: column-fragment
#| code-line-numbers: "|2"

library(ggplot2)

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point() +
  geom_smooth(method = "loess", formula = "y~x")
```

## Output location, `column`

```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "|2"

library(ggplot2)

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point() +
  geom_smooth(method = "loess", formula = "y~x")
```

## Output location, `fragment`

```{r}
#| echo: fenced
#| output-location: fragment
#| code-line-numbers: "|2"

library(ggplot2)

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point() +
  geom_smooth(method = "loess", formula = "y~x")
```

## Output location, `slide`

```{r}
#| echo: fenced
#| output-location: slide
#| code-line-numbers: "|2"

library(ggplot2)

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point() +
  geom_smooth(method = "loess", formula = "y~x")
```

## Column Layout, arbitrary fragment

If you try `. . .` syntax WITH `::: {.columns}` - it won't be incremental... BUT:

::::: {.columns}

:::: {.column width="50%"}

::: {.fragment}

### These appear first

::: {.incremental}
- Make
- Your 
- List
:::

:::

::::

:::: {.column width="50%"}

::: {.fragment}

### Then this

```{r}
#| echo: fenced
head(mtcars)
```


:::

::::

:::::

## Column Layout, arbitrary fragment

You _can_ nest `.incremental` + `.fragment` to get your expected behavior.

:::: .columns

::: .column

```code
## Column Layout, arbitrary fragment

::::: {.columns}

:::: {.column width="50%"}

::: {.fragment}

### These appear first

::: {.incremental}
- Make
- Your 
- List
:::

:::

::::
```

:::

::: .column

````code
:::: {.column width="50%"}

::: {.fragment}

### Then this

```{{r}}
#| echo: fenced
head(mtcars)
```


:::

::::

:::::
````

:::

::::

# `r fontawesome::fa("laptop-code", "white")` Your Turn {background-color="#447099" transition="slide-in"}
- Create a new presentation with RStudio> New Quarto Presentation
- Create two columns with the `::: {.columns}` and use `.fragment` tags on the columns for incremental reveal of those columns

## Images

::: columns
::: {.column width="50%"}
    ![](images/boston-sleep.png){fig-align="center"}

![](images/boston-sleep.png){fig-align="center"}
:::

::: {.column width="50%"}
    ![](images/boston-sleep.png)

![](images/boston-sleep.png)
:::
:::

## Images


```markdown
::: columns
::: {.column width="50%"}
    ![](images/boston-sleep.png){fig-align="center"}

![](images/boston-sleep.png){fig-align="center"}
:::

::: {.column width="50%"}
    ![](images/boston-sleep.png)

![](images/boston-sleep.png)
:::
:::
```

## Stack layout

Incremental reveal of images/content

::: r-stack
![](images/howard-table.png){.fragment width="450"}

![](images/boston-sleep.png){.fragment width="400"}

![](images/boston-terrier.png){.fragment width="300"}
:::

## Stack layout

    ::: {.r-stack}
    ![](image1.png){.fragment width="450"}

    ![](image2.png){.fragment width="400"}

    ![](image3.png){.fragment width="300"}
    :::

##  {background-color="red"}

::: r-fit-text
ATTENTION
:::

## Fit Text `{.r-fit-text}`

    ::: {.r-fit-text}
    Attention
    :::

## Stretch images `{.r-stretch}`

Fit to the remaining space - this is the default behavior in `revealjs`

    ![](images/howard-glamour.jpg){.r-stretch}

. . .

![](images/howard-glamour.jpg)

## Title Slide, YAML edition

``` yaml
---
format: revealjs
title: Hello Quarto
subtitle: Slides with revealjs
author: <a href="https://themockup.blog">Tom Mock</a>
date: 2022-07-11
institute: RStudio
title-slide-attributes:
    data-background-image: images/paper-texture.jpg
    data-background-size: cover
---
```

. . .

<iframe src="../../materials/static/title-slide.html" width="1280px" height="720px">

</iframe>

## Title Slide, DIY

<iframe src="../../materials/static/title-slide2.html" width="1280px" height="720px">

</iframe>

## 

    # {background-image="images/paper-texture.jpg" background-size="cover"}

    :::{style="text-align: center;"}

    <h1>Hello Quarto</h1>
    <img src="images/headshot.jpeg" style="border-radius: 50%; border:10px solid #447099;" width="250px"/>
    <h2>Tom Mock, RStudio</h2>

    :::

## Logo and Footer

    format: revealjs
    footer: <https://quarto.org/>
    logo: https://www.rstudio.com/wp-content/uploads/2018/10/RStudio-Logo-Flat.png

. . .

::: {style="position: absolute; height: 50px; width: 400px; background: #44709935; bottom: -50px; left: 750px;"}
:::

. . .

::: {style="position: absolute; height: 50px; width: 250px; background: #44709935; bottom: -50px; right: -150px;"}
:::

. . .

A footer can also be set by slide with:

::: footer
<https://themockup.blog>
:::

    ::: {.footer}
    <https://themockup.blog>
    :::

## Slide alignment

-   Heading level one will be center-aligned
-   Heading level two will be left-aligned

. . .

    ::: {style="text-align: right;"}
    <h2>Right aligned!</h2>

    -   Some bullets
    -   Another bullet
    :::

::: {style="text-align: right;"}
<h2>Right aligned!</h2>

-   Some bullets
-   Another bullet
:::

## Slide backgrounds, color {background-color="blue"}

    ## Slide backgrounds, color {background-color="blue"}

## Slide backgrounds, images {background-image="images/howard-table.png" background-size="cover"}

    ## Slide backgrounds, images {background-image="images/howard-table.png" background-size="cover"}

## Slide backgrounds, images

Note, you may need to set a `background-color` to black/white to "force" the text to contrast.

+-----------------------+-------------+---------------------------------------------------------------------------------------------------+
| **Attribute**         | **Default** | **Description**                                                                                   |
+:======================+:============+:==================================================================================================+
| `background-image`    |             | URL of the image to show. GIFs restart when the slide opens.                                      |
+-----------------------+-------------+---------------------------------------------------------------------------------------------------+
| `background-size`     | cover       | See [background-size](https://developer.mozilla.org/docs/Web/CSS/background-size) on MDN.         |
+-----------------------+-------------+---------------------------------------------------------------------------------------------------+
| `background-position` | center      | See [background-position](https://developer.mozilla.org/docs/Web/CSS/background-position) on MDN. |
+-----------------------+-------------+---------------------------------------------------------------------------------------------------+
| `background-repeat`   | no-repeat   | See [background-repeat](https://developer.mozilla.org/docs/Web/CSS/background-repeat) on MDN.     |
+-----------------------+-------------+---------------------------------------------------------------------------------------------------+
| `background-opacity`  | 1           | Opacity of the background image on a 0-1 scale. 0 is transparent and 1 is fully opaque.           |
+-----------------------+-------------+---------------------------------------------------------------------------------------------------+

## Tabsets

    ::: {.panel-tabset}

    ## Element 1

    ## Element 2

    :::

## Tabsets

::: panel-tabset
## Code

```{r}
#| echo: fenced
#| eval: false
head(mtcars)
```

## Output

```{r}
#| eval: true
#| echo: false
head(mtcars)
```
:::

## Footnote

Footnotes in presentations are placed at the bottom of the slide and numbered.

    For example, did you know that Howard is a dog^[Specifically he is a Boston Terrier, although sometimes he acts like a cat]?

. . .

For example, did you know that Howard is a dog[^1]?

[^1]: Specifically he is a Boston Terrier, although sometimes he acts like a cat

. . .

He also likes to sleep[^2]

[^2]: He sleeps a LOT during the day... like a cat 🤔

## Asides

Asides are like footnotes, but don't have numbers[^3].

[^3]: Unlike feet that at least have like a shoe size or something?

. . .

    ::: aside
    They are placed above footnotes if footnotes are present on the page
    :::

::: aside
    They are placed above footnotes if footnotes are present on the page
:::

# `r fontawesome::fa("laptop-code", "white")` Your Turn {background-color="#447099" transition="slide-in"}

-   Create a new `revealjs` presentation
-   Add several slides, each one should have *one* element:
    -   Aside/footnote
    -   Tabset with code and output (two options on how!)
    -   Code highlighting walking through at least two lines
    -   A slide with an image as the background
- Render it!

# Code {background-image="https://data.nssmag.com/images/galleries/18043/code-matrix.jpg" background-size="cover" background-color="black"}

## Code line-highlighting

Use `#| code-line-numbers: "3"` syntax - will highlight line and fade other lines

```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "3"

library(ggplot2)

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point() +
  geom_smooth(method = "loess", formula = "y~x")
```

## Code line-highlighting

Sometimes you want to make a point though...

```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "|3"

library(ggplot2)

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point() +
  geom_smooth(method = "loess", formula = "y~x")
```

## Code line-highlighting

And I often want to "walk through" a set of code!

```{r}
#| echo: fenced
#| output-location: column
#| code-line-numbers: "|3|5|8|10"

library(ggplot2)

mtcars |> 
  ggplot(aes(x = disp, y = mpg)) +
  geom_point() +
  geom_smooth(method = "loess", formula = "y~x")
```

## Themes/Appearance

<https://quarto.org/docs/presentations/revealjs/themes.html>

. . .

```yaml
---
title: "Presentation"
format:
  revealjs: 
    theme: serif
---
```

. . .

```yaml
---
title: "Presentation"
format:
  revealjs: 
    theme: dark
---
```

. . .

```yaml
---
title: "Presentation"
format:
  revealjs: 
    theme: [default, custom.scss]
---
```

# Arbitrary HTML + Position absolute

## Position = absolute

    ![](image1.png){.absolute top=200 left=0 width="350" height="300"}

    ![](image2.png){.absolute top=50 right=50 width="450" height="250"}

    ![](image3.png){.absolute bottom=0 right=50 width="300" height="300"}

## Position = `.absolute`

![](images/boston-sleep.png){.absolute top="200" left="0" width="350"}

. . .

![](images/boston-terrier.png){.absolute top="50" right="50" height="250"}

. . .

![](images/lost-howard.jpeg){.absolute bottom="0" right="50" width="300"}

## Position `.absolute`

```code
![](images/boston-sleep.png){.absolute top="200" left="0" width="350"}

. . .

![](images/boston-terrier.png){.absolute top="50" right="50" height="250"}

. . .

![](images/lost-howard.jpeg){.absolute bottom="0" right="50" width="300"}
```

## Auto-Animate {auto-animate="true" auto-animate-easing="ease-in-out"}

Automatically animate matching elements across slides with Auto-Animate.

::: r-hstack
::: {data-id="box1" auto-animate-delay="0" style="background: #2780e3; width: 200px; height: 150px; margin: 10px;"}
:::

::: {data-id="box2" auto-animate-delay="0.1" style="background: #3fb618; width: 200px; height: 150px; margin: 10px;"}
:::

::: {data-id="box3" auto-animate-delay="0.2" style="background: #e83e8c; width: 200px; height: 150px; margin: 10px;"}
:::
:::

## Auto-Animate {auto-animate="true" auto-animate-easing="ease-in-out"}

Automatically animate matching elements across slides with Auto-Animate.

::: r-stack
::: {data-id="box1" style="background: #2780e3; width: 350px; height: 350px; border-radius: 200px;"}
:::

::: {data-id="box2" style="background: #3fb618; width: 250px; height: 250px; border-radius: 200px;"}
:::

::: {data-id="box3" style="background: #e83e8c; width: 150px; height: 150px; border-radius: 200px;"}
:::
:::

<!-- ## Auto-Animate {auto-animate="true" auto-animate-easing="ease-in-out"} -->

<!-- ::: {style="font-size: 160px; text-align: center;"} -->
<!-- IMPORTANT POINT! -->
<!-- ::: -->

<!-- ##  {auto-animate="true" auto-animate-easing="ease-in-out"} -->

<!-- ::: {style="font-size: 25px;"} -->
<!-- Ok, not that important! -->
<!-- ::: -->

<!-- ##  -->

<!-- ``` code -->
<!-- ## Auto-Animate {auto-animate="true" auto-animate-easing="ease-in-out"} -->

<!-- ::: {style="font-size: 160px; text-align: center;"} -->

<!-- IMPORTANT POINT! -->

<!-- ::: -->

<!-- ##  {auto-animate="true" auto-animate-easing="ease-in-out"} -->

<!-- ::: {style="font-size: 25px;"} -->

<!-- Ok, not that important! -->

<!-- ::: -->
<!-- ``` -->
